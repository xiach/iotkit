# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2018-02-27 11:02
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('account', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=16, verbose_name='产品型号')),
                ('brand', models.CharField(blank=True, default='', max_length=16, verbose_name='产品品牌')),
                ('brief', models.CharField(blank=True, default='', max_length=128, verbose_name='产品描述')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建日期')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='更新日期')),
                ('memo', models.CharField(blank=True, default='', max_length=64, verbose_name='备注')),
                ('protocol', models.CharField(choices=[('default', '默认'), ('passthrough', '透传')], default='default', max_length=16, verbose_name='协议解析模式')),
                ('networking', models.CharField(choices=[('WiFi', 'WiFi'), ('Bluetooth', 'Bluetooth'), ('ZigBee', 'ZigBee'), ('Ethernet', 'Ethernet'), ('GPRS', 'GPRS'), ('NB-IOT', 'NB-IOT'), ('433', '433'), ('485', '485'), ('USB', 'USB')], default='WiFi', max_length=16, verbose_name='入网方式')),
                ('binding', models.CharField(choices=[('exclusive', '单账号'), ('sharing', '多账号')], default='sharing', max_length=16, verbose_name='产品绑定方式')),
                ('status', models.CharField(choices=[('new', '未提交'), ('auditing', '审核中'), ('rejected', '已退回'), ('registered', '已注册'), ('releasing', '发布中'), ('failure', '发布失败'), ('released', '已发布')], default='new', max_length=16, verbose_name='状态')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否可用')),
                ('secret', models.CharField(blank=True, max_length=32, null=True, verbose_name='产品密钥')),
                ('scene', models.CharField(blank=True, default='', max_length=64, verbose_name='场景配置')),
                ('auditor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='audited_product', to='account.Staff')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_product', to='account.Staff')),
            ],
        ),
        migrations.CreateModel(
            name='ProductCapability',
            fields=[
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=16, verbose_name='功能ID')),
                ('name', models.CharField(max_length=16, verbose_name='功能名称')),
                ('kind', models.CharField(choices=[('standard', '标准参数'), ('private', '自定义参数')], max_length=16, verbose_name='参数类型')),
                ('type', models.CharField(choices=[('switch', '开关'), ('enum', '枚举'), ('range', '范围'), ('string', '字符串'), ('time', '时间'), ('fault', '故障')], max_length=16, verbose_name='取值类型')),
                ('direction', models.CharField(choices=[('upstream', '上行'), ('downstream', '下行'), ('bidirectional', '上下行')], max_length=16, verbose_name='读写类型')),
                ('value', models.CharField(max_length=256, verbose_name='取值说明')),
                ('updated', models.DateTimeField(auto_now=True, null=True, verbose_name='更新日期')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='capability', to='product.Product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=32, unique=True, verbose_name='类别')),
                ('name', models.CharField(max_length=16, unique=True, verbose_name='名称')),
            ],
        ),
        migrations.CreateModel(
            name='ProductSpecies',
            fields=[
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=32, unique=True, verbose_name='子类')),
                ('name', models.CharField(max_length=16, unique=True, verbose_name='名称')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='species', to='product.ProductCategory')),
            ],
            options={
                'ordering': ['category'],
            },
        ),
        migrations.AddField(
            model_name='productcapability',
            name='species',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='capability', to='product.ProductSpecies'),
        ),
        migrations.AddField(
            model_name='product',
            name='species',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='product', to='product.ProductSpecies'),
        ),
        migrations.AddField(
            model_name='product',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='product', to='account.Tenant'),
        ),
        migrations.AlterUniqueTogether(
            name='productcapability',
            unique_together=set([('species', 'key'), ('product', 'key')]),
        ),
        migrations.AlterUniqueTogether(
            name='product',
            unique_together=set([('tenant', 'model')]),
        ),
    ]
